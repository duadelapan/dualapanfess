{"version":3,"sources":["static/images/28.png","components/Home.js","components/Tweet.js","components/Reply.js","App.js","index.js"],"names":["Home","props","styles","useSpring","from","opacity","to","config","duration","delay","captionStyle","color","fontFamily","fontSize","lineHeight","fontWeight","div","className","style","Grid","container","spacing","alignItems","item","xs","align","src","logo","alt","Typography","variant","component","Link","href","target","Button","size","onClick","history","push","useStyles","makeStyles","multilineColor","greenTextFieldStyles","withStyles","root","borderBottomColor","borderColor","Tweet","useState","errorMsg","setErrorMsg","tweetText","setTweetText","tweetLink","setTweetLink","classes","TextField","GreenTextField","setGreenTextField","useEffect","postTweet","e","a","preventDefault","toLowerCase","includes","fetch","method","headers","body","JSON","stringify","res","ok","json","data","link","noValidate","autoComplete","onSubmit","window","location","replace","multiline","rows","width","value","onChange","error","label","helperText","InputProps","type","paddingRight","cssLabel","Reply","tweetHTML","setTweetHTML","getHTML","console","log","html","anchor","document","createElement","setAttribute","twitterEmbed","getElementsByClassName","appendChild","script","length","ReactHtmlParser","InputLabelProps","notchedOutline","theme","createMuiTheme","typography","h3","palette","primary","green","App","ThemeProvider","exact","path","ReactDOM","render","id","getElementById"],"mappings":"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","file":"static/js/main.14797718.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/28.f06538be.png\";","import { Grid, Typography, Link, Button } from \"@material-ui/core\"\r\nimport logo from \"../static/images/28.png\"\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst Home = (props) => {\r\n    const styles = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: 1 },\r\n        config: {\r\n            duration: 500,\r\n            delay: 500\r\n        }\r\n      });\r\n    const captionStyle = {\r\n        color: '#FFFFF',\r\n        fontFamily: \"'Quicksand', sans-serif\",\r\n        fontSize: '1em',\r\n        lineHeight: 1.625,\r\n        fontWeight: 400,\r\n    };\r\n    return (\r\n        <animated.div className=\"inner\" style={styles}>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n            <Grid item xs={12} align=\"center\">\r\n                <img className=\"logo\" src={logo} alt=\"SMAN 28 Jakarta\" />\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Typography variant=\"h3\" component=\"h3\" className=\"title\" fontWeight=\"fontWeightBold\">\r\n                    @28FESS\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Typography variant=\"body1\" component=\"p\" style={captionStyle}>\r\n                    28FESS adalah akun menfess otomatis khusus untuk \r\n                    <span className=\"bold\"> siswa 28</span>. 28FESS \r\n                    <em className=\"color-red\"> bukan</em> official account dan tidak terkait dengan instansi manapun.\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n            <Link href=\"https://liff.line.me/1645278921-kWRPP32q?accountId=235fcixk&openerPlatform=native&openerKey=chatMessage\"\r\n                style={{...captionStyle, color:'#1bf551', fontWeight: 'bold'}} target=\"_blank\">\r\n                Add Line Official Account 28FESS BOT\r\n            </Link>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <hr/>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button variant=\"contained\" color=\"default\" size=\"large\" onClick={() => props.history.push(\"/tweet\")}>\r\n                <TwitterIcon style={{color: \"#1DA1F2\"}}\r\n                /> Tweet</Button>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => props.history.push(\"/reply\")}>\r\n                <TwitterIcon style={{color: \"#1DA1F2\"}}\r\n                /> Reply Tweet</Button>\r\n            </Grid>\r\n        </Grid>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { Grid, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\"\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {useState, useEffect } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    multilineColor: {\r\n      color: 'white'\r\n    },\r\n  });\r\n\r\nconst greenTextFieldStyles = withStyles({\r\n    root: {\r\n      '& label.Mui-focused': {\r\n        color: '#1DA1F2',\r\n        fontSize: '1rem'\r\n      },\r\n      '& label': {\r\n        color: '#1DA1F2',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'red',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: '#1DA1F2',\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: 'grey',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: 'white',\r\n        },\r\n      }, \r\n    },\r\n  });\r\n\r\nfunction Tweet(props) {\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n    const [tweetText, setTweetText] = useState(\"\");\r\n    const [tweetLink, setTweetLink] = useState(\"\")\r\n    const classes = useStyles()\r\n\r\n    const styles = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: 1 },\r\n        config: {\r\n            duration: 500,\r\n            delay: 500\r\n        }\r\n      });\r\n\r\n    const [GreenTextField, setGreenTextField] = useState(TextField);\r\n    useEffect(() => {\r\n        setGreenTextField(greenTextFieldStyles(TextField));\r\n    }, []);\r\n    \r\n\r\n    const postTweet = async (e) => {\r\n        e.preventDefault();\r\n        if (!tweetText.toLowerCase().includes(\"dupan!\")) {\r\n            setErrorMsg(\"Tweet wajib berisi keyword 'dupan!'\");\r\n        }else {\r\n            const res = await fetch(\"https://dualapan.herokuapp.com/api/tweet\", {\r\n                method: \"POST\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({'text': tweetText})\r\n            });\r\n            if (res.ok) {\r\n                if (errorMsg !== \"\") setErrorMsg(\"\");\r\n                const data = await res.json();\r\n                setTweetLink(data.link);\r\n            } else {\r\n                setErrorMsg(\"Failed to upload tweet.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <animated.div className=\"inner\" style={styles}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={postTweet}>\r\n            {tweetLink !== \"\" && window.location.replace(tweetLink)}\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Typography variant=\"h3\" component=\"h3\" className=\"title\" fontWeight=\"fontWeightBold\">\r\n                        Tweet @28FESS\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <GreenTextField multiline rows={4} variant=\"outlined\" style={{width: '100%', color: 'white'}} \r\n                    value={tweetText}\r\n                    onChange={(e) => setTweetText(e.target.value)}\r\n                    error={errorMsg !== ''}\r\n                    label=\"Tweet Text\"\r\n                    helperText={ errorMsg }\r\n                    InputProps={{\r\n                        className: classes.multilineColor\r\n                      }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button \r\n                    type=\"submit\" \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{width: \"100%\"}}\r\n                    >\r\n                        <SendIcon style={{paddingRight: \"20px\"}}/>Post Tweet</Button>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\" \r\n                    onClick={() => props.history.push('/')}\r\n                    >Home</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Tweet\r\n","import { useState, useEffect } from 'react'\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Grid, TextField, Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\n\r\nconst useStyles = makeStyles({\r\n    cssLabel: {\r\n        color: 'white',\r\n    },\r\n    root: {\r\n        borderColor: 'white',\r\n        color: 'white',\r\n    },\r\n\r\n})\r\nconst Reply = (props) => {\r\n    const [tweetHTML, setTweetHTML] = useState(\"\");\r\n    const [tweetLink, setTweetLink] = useState(\"\");\r\n    const [tweetText, setTweetText] = useState(\"\");\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n    const classes = useStyles();\r\n    const styles = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: 1 },\r\n        config: {\r\n            duration: 500,\r\n            delay: 500\r\n        }\r\n      });\r\n    const getHTML = async (e) => {\r\n            e.preventDefault();\r\n            console.log(tweetLink);\r\n            const res = await fetch(`https://dualapan.herokuapp.com/api/get-tweet-html?link=${tweetLink}`);\r\n            if (res.ok){\r\n                const data = await res.json();\r\n                let html = data.html\r\n                if (!html.includes(\"<script\")){\r\n                    html += '<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>'\r\n                }\r\n                console.log(html)\r\n                setTweetHTML(data.html);\r\n                setErrorMsg(\"\");\r\n            } else {\r\n                setErrorMsg(\"Error get tweet\");\r\n            }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const anchor = document.createElement(\"a\");\r\n        anchor.setAttribute(\"class\", \"twitter-timeline\");\r\n        anchor.setAttribute(\"data-theme\", \"dark\");\r\n        anchor.setAttribute(\"data-tweet-limit\", \"5\");\r\n        anchor.setAttribute(\"data-chrome\", \"noheader nofooter noborders\");\r\n        anchor.setAttribute(\"href\", tweetLink);\r\n        const twitterEmbed = document.getElementsByClassName(\"twitter-embed\")\r\n        if (twitterEmbed[0]) {\r\n            twitterEmbed[0].appendChild(anchor);   \r\n            const script = document.createElement(\"script\");\r\n            script.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\r\n            document.getElementsByClassName(\"twitter-embed\")[0].appendChild(script);\r\n        }\r\n      });\r\n\r\n    const postTweet = async (e) => {\r\n        e.preventDefault();\r\n        if (tweetText.length < 5) {\r\n            setErrorMsg(\"Tweet terlalu pendek\");\r\n        }else {\r\n            const res = await fetch(\"https://dualapan.herokuapp.com/api/tweet\", {\r\n                method: \"POST\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({'text': tweetText, 'reply': true, 'reply_link': tweetLink})\r\n            });\r\n            if (res.ok) {\r\n                if (errorMsg !== \"\") setErrorMsg(\"\");\r\n                const data = await res.json();\r\n                window.location.replace(data.link)\r\n            } else {\r\n                setErrorMsg(\"Failed to upload tweet.\");\r\n            }\r\n        }\r\n    }\r\n    // {tweetHTML !== \"\" ? getHTML : postTweet}\r\n\r\n    return (\r\n        <animated.div className=\"inner\" style={styles}>\r\n            <form noValidate autoComplete=\"off\" onSubmit={tweetHTML === \"\" ? getHTML : postTweet}>\r\n                <Grid container spacing={1}>\r\n                    {tweetHTML !== \"\" ? <>\r\n                        <Grid item xs={12} align=\"center\" className=\"twitter-embed\">\r\n                            { ReactHtmlParser (tweetHTML) }\r\n                        </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                            label=\"Reply Tweet\"\r\n                            variant=\"outlined\"\r\n                            error={errorMsg !== ''}\r\n                            helperText={ errorMsg }\r\n                            value={tweetText}\r\n                            onChange={(e) => setTweetText(e.target.value)}\r\n                            multiline\r\n                            rows={3}\r\n                            style={{width: \"100%\"}}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                }\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.root,\r\n                                    notchedOutline: classes.root\r\n                                }\r\n                            }}\r\n                            \r\n                            />\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                        <Button \r\n                        type=\"submit\" \r\n                        variant=\"contained\" \r\n                        color=\"primary\" \r\n                        style={{width: \"100%\"}}><SendIcon style={{paddingRight: \"20px\"}}/>\r\n                            Send Reply</Button>\r\n                    </Grid>\r\n                    </> : <>\r\n                    <Grid item xs={12} align=\"center\">\r\n                    <Typography variant=\"h3\" component=\"h3\" className=\"title\" fontWeight=\"fontWeightBold\">\r\n                        Reply @28FESS\r\n                    </Typography>\r\n                </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField \r\n                            label=\"Tweet Link To Reply\"\r\n                            value={tweetLink}\r\n                            onChange={(e) => setTweetLink(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            style={{width: \"100%\"}}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                }\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.root,\r\n                                    notchedOutline: classes.root\r\n                                }\r\n                            }}\r\n                            \r\n                            />\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"center\">\r\n                    <Button \r\n                    type=\"submit\" \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{width: \"100%\"}}>\r\n                        Check Link</Button>\r\n                </Grid>\r\n                    </>\r\n                    }\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\" \r\n                    onClick={() => props.history.push('/')}\r\n                    >Home</Button>\r\n                </Grid>\r\n                </Grid>\r\n            </form>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Reply\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\"\nimport { green } from '@material-ui/core/colors';\nimport Home from \"./components/Home\";\nimport Tweet from \"./components/Tweet\";\nimport Reply from \"./components/Reply\";\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router >\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/tweet\" component={Tweet} />\n          <Route exact path=\"/reply\" component={Reply} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"'Quicksand', sans-serif\",\n    h3: {\n      fontWeight: \"bold\"\n    },\n    palette: {\n      primary: green,\n    },\n  }\n})\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <div id=\"main\">\n        <App />\n    </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}