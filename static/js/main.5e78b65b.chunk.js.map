{"version":3,"sources":["static/images/28.png","components/Home.js","components/Tweet.js","components/Reply.js","App.js","index.js"],"names":["Home","props","styles","useSpring","from","opacity","to","config","duration","delay","captionStyle","color","fontFamily","fontSize","lineHeight","fontWeight","div","className","style","Grid","container","spacing","alignItems","item","xs","align","src","logo","alt","Typography","variant","component","Link","href","target","Button","size","onClick","history","push","useStyles","makeStyles","multilineColor","greenTextFieldStyles","withStyles","root","borderBottomColor","borderColor","Tweet","useState","errorMsg","setErrorMsg","tweetText","setTweetText","tweetLink","setTweetLink","imageValue","setImageValue","classes","TextField","GreenTextField","setGreenTextField","useEffect","postTweet","e","a","preventDefault","withImage","toLowerCase","includes","postImage","mediaId","fetch","method","headers","body","JSON","stringify","text","media_id","res","ok","json","data","link","formData","FormData","append","noValidate","autoComplete","onSubmit","window","location","replace","multiline","rows","width","value","onChange","error","label","helperText","InputProps","URL","createObjectURL","maxHeight","accept","input","hidden","id","type","file","files","startsWith","htmlFor","button","name","paddingRight","cssLabel","Reply","tweetHTML","setTweetHTML","replyToken","setReplyToken","isRequested","setIsRequested","isLoading","setIsLoading","getHTML","html","reply_token","console","log","anchor","document","createElement","setAttribute","twitterEmbed","getElementsByClassName","innerHTML","appendChild","script","length","reply","reply_link","ReactHtmlParser","InputLabelProps","notchedOutline","LinearProgress","theme","createMuiTheme","typography","h3","palette","primary","green","App","ThemeProvider","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5e78b65b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/28.f06538be.png\";","import { Grid, Typography, Link, Button } from \"@material-ui/core\";\r\nimport logo from \"../static/images/28.png\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst Home = (props) => {\r\n  const styles = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    config: {\r\n      duration: 500,\r\n      delay: 500,\r\n    },\r\n  });\r\n  const captionStyle = {\r\n    color: \"#FFFFF\",\r\n    fontFamily: \"'Quicksand', sans-serif\",\r\n    fontSize: \"1em\",\r\n    lineHeight: 1.625,\r\n    fontWeight: 400,\r\n  };\r\n  return (\r\n    <animated.div className=\"inner\" style={styles}>\r\n      <Grid container spacing={1} alignItems=\"center\">\r\n        <Grid item xs={12} align=\"center\">\r\n          <img className=\"logo\" src={logo} alt=\"SMAN 28 Jakarta\" />\r\n        </Grid>\r\n        <Grid item xs={12} align=\"center\">\r\n          <Typography\r\n            variant=\"h3\"\r\n            component=\"h3\"\r\n            className=\"title\"\r\n            fontWeight=\"fontWeightBold\"\r\n          >\r\n            @28FESS\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} align=\"center\">\r\n          <Typography variant=\"body1\" component=\"p\" style={captionStyle}>\r\n            28FESS adalah akun menfess otomatis khusus untuk\r\n            <span className=\"bold\"> siswa 28</span>. 28FESS\r\n            <em className=\"color-red\"> bukan</em> official account dan tidak\r\n            terkait dengan instansi manapun.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} align=\"center\">\r\n          <Link\r\n            href=\"https://forms.gle/C4vcGydojXYCq8Hu7\"\r\n            style={{ ...captionStyle, color: \"red\", fontWeight: \"bold\" }}\r\n            target=\"_blank\"\r\n          >\r\n            Report Masalah/Kritik/Saran di sini.\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} align=\"center\">\r\n          <Link\r\n            href=\"https://liff.line.me/1645278921-kWRPP32q?accountId=235fcixk&openerPlatform=native&openerKey=chatMessage\"\r\n            style={{ ...captionStyle, color: \"#1bf551\", fontWeight: \"bold\" }}\r\n            target=\"_blank\"\r\n          >\r\n            Add Line Official Account 28FESS BOT\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} align=\"center\">\r\n          <hr />\r\n        </Grid>\r\n        <Grid item xs={12} align=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            size=\"large\"\r\n            onClick={() => props.history.push(\"/tweet\")}\r\n          >\r\n            <TwitterIcon style={{ color: \"#1DA1F2\" }} /> Tweet\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} align=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => props.history.push(\"/reply\")}\r\n          >\r\n            <TwitterIcon style={{ color: \"#1DA1F2\" }} /> Reply Tweet\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Grid, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst useStyles = makeStyles({\r\n  multilineColor: {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nconst greenTextFieldStyles = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#1DA1F2\",\r\n      fontSize: \"1rem\",\r\n    },\r\n    \"& label\": {\r\n      color: \"#1DA1F2\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#1DA1F2\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"grey\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction Tweet(props) {\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [tweetText, setTweetText] = useState(\"\");\r\n  const [tweetLink, setTweetLink] = useState(\"\");\r\n  const [imageValue, setImageValue] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const styles = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    config: {\r\n      duration: 500,\r\n      delay: 500,\r\n    },\r\n  });\r\n\r\n  const [GreenTextField, setGreenTextField] = useState(TextField);\r\n  useEffect(() => {\r\n    setGreenTextField(greenTextFieldStyles(TextField));\r\n  }, []);\r\n\r\n  const postTweet = async (e) => {\r\n    e.preventDefault();\r\n    const withImage = imageValue !== \"\";\r\n    if (!tweetText.toLowerCase().includes(\"dupan!\")) {\r\n      setErrorMsg(\"Tweet wajib berisi keyword 'dupan!'\");\r\n    } else {\r\n      const mediaId = withImage ? await postImage() : null;\r\n      const res = await fetch(\"https://dualapan.herokuapp.com/api/tweet\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: tweetText, media_id: mediaId }),\r\n      });\r\n      if (res.ok) {\r\n        if (errorMsg !== \"\") setErrorMsg(\"\");\r\n        const data = await res.json();\r\n        setTweetLink(data.link);\r\n      } else {\r\n        setErrorMsg(\"Failed to upload tweet.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      if (file.type.startsWith(\"image/\")) {\r\n        setImageValue(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const postImage = async () => {\r\n    let formData = new FormData();\r\n    formData.append(\"files\", imageValue);\r\n    const res = await fetch(\"https://dualapan.herokuapp.com/api/image\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    const data = await res.json();\r\n    return data.media_id;\r\n  };\r\n\r\n  return (\r\n    <animated.div className=\"inner\" style={styles}>\r\n      <form noValidate autoComplete=\"off\" onSubmit={postTweet}>\r\n        {tweetLink !== \"\" && window.location.replace(tweetLink)}\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} align=\"center\">\r\n            <Typography\r\n              variant=\"h3\"\r\n              component=\"h3\"\r\n              className=\"title\"\r\n              fontWeight=\"fontWeightBold\"\r\n            >\r\n              Tweet @28FESS\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} align=\"center\">\r\n            <GreenTextField\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\", color: \"white\" }}\r\n              value={tweetText}\r\n              onChange={(e) => setTweetText(e.target.value)}\r\n              error={errorMsg !== \"\"}\r\n              label=\"Tweet Text\"\r\n              helperText={errorMsg}\r\n              InputProps={{\r\n                className: classes.multilineColor,\r\n              }}\r\n            />\r\n          </Grid>\r\n          {imageValue && (\r\n            <Grid item xs={12} align=\"center\">\r\n              <img\r\n                src={URL.createObjectURL(imageValue)}\r\n                alt=\"your\"\r\n                style={{ maxHeight: \"100px\" }}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12} align=\"center\">\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              hidden\r\n              id=\"raised-button-file\"\r\n              type=\"file\"\r\n              onChange={handleFileChange}\r\n            />\r\n            <label htmlFor=\"raised-button-file\">\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"span\"\r\n                className={classes.button}\r\n              >\r\n                {imageValue ? imageValue.name : \"Upload an image (optional)\"}\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n          <Grid item xs={12} align=\"center\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <SendIcon style={{ paddingRight: \"20px\" }} />\r\n              Post Tweet\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => props.history.push(\"/\")}\r\n            >\r\n              Home\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nexport default Tweet;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nconst useStyles = makeStyles({\r\n  cssLabel: {\r\n    color: \"white\",\r\n  },\r\n  root: {\r\n    borderColor: \"white\",\r\n    color: \"white\",\r\n  },\r\n});\r\nconst Reply = (props) => {\r\n  const [tweetHTML, setTweetHTML] = useState(\"\");\r\n  const [tweetLink, setTweetLink] = useState(\"\");\r\n  const [tweetText, setTweetText] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [replyToken, setReplyToken] = useState(\"\");\r\n  const [isRequested, setIsRequested] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [imageValue, setImageValue] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const styles = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    config: {\r\n      duration: 500,\r\n      delay: 500,\r\n    },\r\n  });\r\n  const getHTML = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const res = await fetch(\r\n      `https://dualapan.herokuapp.com/api/get-tweet-html?link=${tweetLink}`\r\n    );\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      let html = data.html;\r\n      if (!html.includes(\"<script\")) {\r\n        html +=\r\n          '<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>';\r\n      }\r\n      setReplyToken(data.reply_token);\r\n      console.log(data.reply_token);\r\n      setTweetHTML(data.html);\r\n      setErrorMsg(\"\");\r\n    } else {\r\n      setErrorMsg(data.error ? data.error : \"Link\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const clearTweetEmbed = () => {\r\n    document.getElementsByClassName(\"tweets\")[0].innerHTML = \"\";\r\n    setTweetHTML(\"\");\r\n    setTweetLink(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const anchor = document.createElement(\"a\");\r\n    anchor.setAttribute(\"class\", \"twitter-timeline\");\r\n    anchor.setAttribute(\"data-theme\", \"dark\");\r\n    anchor.setAttribute(\"data-tweet-limit\", \"5\");\r\n    anchor.setAttribute(\"data-chrome\", \"noheader nofooter noborders\");\r\n    anchor.setAttribute(\"href\", tweetLink);\r\n    const twitterEmbed = document.getElementsByClassName(\"twitter-embed\");\r\n    if (twitterEmbed[0]) {\r\n      if (tweetHTML === \"\") {\r\n        twitterEmbed[0].innerHTML = \"\";\r\n      }\r\n      twitterEmbed[0].appendChild(anchor);\r\n      const script = document.createElement(\"script\");\r\n      script.setAttribute(\"src\", \"https://platform.twitter.com/widgets.js\");\r\n      document.getElementsByClassName(\"twitter-embed\")[0].appendChild(script);\r\n    }\r\n  });\r\n\r\n  const postTweet = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const withImage = imageValue !== \"\";\r\n    if (isRequested) {\r\n      setErrorMsg(\"Uploading tweet, please wait.\");\r\n      return;\r\n    }\r\n    if (tweetText.length < 5) {\r\n      setErrorMsg(\"Tweet terlalu pendek\");\r\n    } else {\r\n      setIsRequested(true);\r\n      const mediaId = withImage ? await postImage() : null;\r\n      const res = await fetch(\"https://dualapan.herokuapp.com/api/tweet\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          text: tweetText,\r\n          reply: true,\r\n          reply_link: tweetLink,\r\n          reply_token: replyToken,\r\n          media_id: mediaId,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        if (errorMsg !== \"\") setErrorMsg(\"\");\r\n        window.location.replace(data.link);\r\n      } else {\r\n        setIsRequested(false);\r\n        setErrorMsg(data.error ? data.error : \"Failed to upload tweet.\");\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  // {tweetHTML !== \"\" ? getHTML : postTweet}\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      if (file.type.startsWith(\"image/\")) {\r\n        setImageValue(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const postImage = async () => {\r\n    let formData = new FormData();\r\n    formData.append(\"files\", imageValue);\r\n    const res = await fetch(\"https://dualapan.herokuapp.com/api/image\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    const data = await res.json();\r\n    return data.media_id;\r\n  };\r\n\r\n  return (\r\n    <animated.div className=\"inner\" style={styles}>\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={tweetHTML === \"\" ? getHTML : postTweet}\r\n      >\r\n        <Grid container spacing={1}>\r\n          {tweetHTML !== \"\" ? (\r\n            <>\r\n              <Grid item xs={12} align=\"center\" className=\"twitter-embed\">\r\n                <div className=\"tweets\">{ReactHtmlParser(tweetHTML)}</div>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Reply Tweet\"\r\n                  variant=\"outlined\"\r\n                  error={errorMsg !== \"\"}\r\n                  helperText={errorMsg}\r\n                  value={tweetText}\r\n                  onChange={(e) => setTweetText(e.target.value)}\r\n                  multiline\r\n                  rows={3}\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    classes: {\r\n                      root: classes.cssLabel,\r\n                    },\r\n                  }}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.root,\r\n                      notchedOutline: classes.root,\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              {imageValue && (\r\n                <Grid item xs={12} align=\"center\">\r\n                  <img\r\n                    src={URL.createObjectURL(imageValue)}\r\n                    alt=\"your\"\r\n                    style={{ maxHeight: \"100px\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs={12} align=\"center\">\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  hidden\r\n                  id=\"raised-button-file\"\r\n                  type=\"file\"\r\n                  onChange={handleFileChange}\r\n                />\r\n                <label htmlFor=\"raised-button-file\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"span\"\r\n                    className={classes.button}\r\n                  >\r\n                    {imageValue\r\n                      ? imageValue.name\r\n                      : \"Upload an image (optional)\"}\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {isLoading && (\r\n                <Grid item xs={12} align=\"center\">\r\n                  <LinearProgress />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs={12} align=\"center\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <SendIcon style={{ paddingRight: \"20px\" }} />\r\n                  Send Reply\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} align=\"center\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={clearTweetEmbed}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Grid item xs={12} align=\"center\">\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  component=\"h3\"\r\n                  className=\"title\"\r\n                  fontWeight=\"fontWeightBold\"\r\n                >\r\n                  Reply @28FESS\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Tweet Link To Reply\"\r\n                  value={tweetLink}\r\n                  error={errorMsg !== \"\"}\r\n                  helperText={errorMsg}\r\n                  onChange={(e) => setTweetLink(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"100%\" }}\r\n                  InputLabelProps={{\r\n                    classes: {\r\n                      root: classes.cssLabel,\r\n                    },\r\n                  }}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.root,\r\n                      notchedOutline: classes.root,\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              {isLoading && (\r\n                <Grid item xs={12} align=\"center\">\r\n                  <LinearProgress />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs={12} align=\"center\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  Check Link\r\n                </Button>\r\n              </Grid>\r\n            </>\r\n          )}\r\n          <Grid item xs={12} align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => props.history.push(\"/\")}\r\n            >\r\n              Home\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Reply;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Home from \"./components/Home\";\nimport Tweet from \"./components/Tweet\";\nimport Reply from \"./components/Reply\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/tweet\" component={Tweet} />\n          <Route exact path=\"/reply\" component={Reply} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"'Quicksand', sans-serif\",\n    h3: {\n      fontWeight: \"bold\",\n    },\n    palette: {\n      primary: green,\n    },\n  },\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <div id=\"main\">\n        <App />\n    </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}